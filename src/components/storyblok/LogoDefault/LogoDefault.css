@scope {
  & {
    /* Animation timing variables */
    --morph-duration: 0.4s;
    --morph-rotation-duration: 0.5s;
    --morph-delay-step: 50ms;
    --morph-easing: cubic-bezier(0.4, 0, 0.2, 1);

    display: grid;
    grid-area: full / logo;
    /* grid-template-columns: var(--layout, [logo] 1fr [button-toggle] 6rem); */
    align-items: center;
    container: logo / inline-size;
    background-color: var(--secondary-700);
    place-content: center;
    /* height: 2rem;
    margin-top: 1rem; */
    z-index: 0;

    @media screen and (width >= 768px) {
      --layout: 1fr;
      justify-content: start;
    }
  }

  .link-logo {
    display: flex;
    gap: calc(var(--spacing-sm) * 1.5);
    height: max-content;
    margin: unset;
    outline-offset: 0.25rem;
    padding-inline: var(--spacing-base);
    text-decoration: none;
    user-select: none;
    width: min-content;
    align-items: center;
  }

  .logo-text {
    --font-size: var(--text-sm);

    color: var(--light-100);
    font-family: var(--font-family-heading);
    font-size: var(--font-size);
    font-weight: var(--text-weight-bold);
    letter-spacing: 0.1rem;
    text-transform: uppercase;
    display: flex;
    font-variation-settings: "opsz" var(--font-opsz-text);

    /* @container (width >= 9rem) {
      --font-size: calc(var(--font-base) * 0.9);
    } */
  }

  /* Morphing animation styles */
  .morphing-logo {
    transition: transform var(--morph-rotation-duration) ease;
  }

  .morph-shape {
    transition:
      rx var(--morph-duration) var(--morph-easing),
      ry var(--morph-duration) var(--morph-easing),
      transform var(--morph-duration) var(--morph-easing);
    transform-origin: center;
  }

  /* Hover state - morph circles to squares */
  .link-logo:hover .morph-shape {
    rx: 0;
    ry: 0;
  }

  /* Add rotation on hover */
  .link-logo:hover .morphing-logo {
    transform: rotate(90deg);
  }

  /* Staggered animation delays for each shape */
  .shape-1 {
    transition-delay: calc(var(--morph-delay-step) * 0);
  }
  .shape-2 {
    transition-delay: calc(var(--morph-delay-step) * 1);
  }
  .shape-3 {
    transition-delay: calc(var(--morph-delay-step) * 2);
  }
  .shape-4 {
    transition-delay: calc(var(--morph-delay-step) * 3);
  }
  .shape-5 {
    transition-delay: calc(var(--morph-delay-step) * 4);
  }
  .shape-6 {
    transition-delay: calc(var(--morph-delay-step) * 5);
  }
}
